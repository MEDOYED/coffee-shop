'use strict';


------------------ТИПИ ДАННИХ-----------------
          Primitive data types:
          ПРимітивний тип данних
string -->  'name'; '4' 
number -->   4, 6
boolean  -->  True / Falsh
Null  -->  нічого, пусте значення
Undefind
Symbols ES6

          References data types
          Силлочний тип данних
Array
Object Literal
Function
Date
Anything else...


===========falsy values=================

0, '' , undefined, null, NaN  === false

===========================================

=========AND OR NOT============================

AND -->  &&
OR  -->  ||
NOT -->  !



=========================ARRAYS=================================================
=========================ARRAYS=================================================
=========================ARRAYS=================================================

rainbowColors[rainbowColors.length] = 'white';   ==> // добавляє елемент до масиву в КІНЕЦЬ масиву

--------41---------------------------------
--------41---------------------------------

const rainbowColors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet'];

console.log(rainbowColors[0]);

console.log('The sky is ' + rainbowColors[4] + '!');


rainbowColors[5] = 'dark blue';
rainbowColors[9] = 'indigo';       //  зараз між 7 та 10 кольором пустотa
rainbowColors[rainbowColors.length] = 'white';  // добавляє елемент до масиву в КІНЕЦЬ масиву

console.log(rainbowColors);

// const stringNumbers = [];
// stringNumbers[0] = 'one'
// stringNumbers[1] = 'two'
// stringNumbers[2] = 'thre'

const stringNumbers = new Array ('one', 'two', 'three');
console.log(stringNumbers);


const numbers = [34, 15, 89, 72, 3, 16];
console.log(numbers);

const anyItems = [4, true, new Date(), 'something'];
console.log(anyItems);

------------------------------------------
------------------------------------------






============================================================================================================================================
============================================================================================================================================
============================================================================================================================================
// Object "Sara"
const sara = {
  firstName: 'Sara',
  lastName: 'Brown',
  age: 25,
  familyMembers: ['Jack', 'Bob', 'Greta'],
}

//copy object "sara" to const saraCopy
const saraCopy = Object.assign({}, sara); 

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

            //swaping wariables -- обмін данними

// const temp = main;
// main = secondary;
// secondary = temp;
// console.log(main, secondary);

[secondary, main] = [main, secondary];
console.log(main, secondary);
============================================================================================================================================
============================================================================================================================================

     Методи строк
     Методи строк
     Методи строк

.indexOf(a)  -->  знаходить індекс а 

.length  --> знаходить довжину

.lastIndexOf('7') --> знаходить індекс останньої 7

.slice(7)  --> все до 7 елемента
.slice(0, 6)  -->  все від 0 до 5 включно

typeof x  --> щоб зрозуміти який тип

.toLowerCase()  --> робить всі букви маленькими

.toUpperCase()  --> робить всі букви великими

.trim()  --> обрізає по пробілах
.trimEnd()  --> обрізає з кінця по пробілу
.trimStart()  -->  обрізає з початку по пробілу


.replace('*', '$')  -->  заміняє * на $ в строчці

.replaceAll('door', 'goat') -->  заміняє у всіх місяцях всі слова 'door' на 'goat'

.includes('737')  -->  перевірка, чи є 737 в строчці. Якщо є то в консолі true

.startsWith('Bo')  -->  перевіряє початок строки

.endsWith('737')  --> перевіряє кінець строки

.split(' ')  -->  розділяє по пробілу. 
.join(' ')   -->  об'єднює по пробілу


======================== Методи масивов ===============
======================== Методи масивов ===============
======================== Методи масивов ===============

---------- Змінюють масив не створюючи новий ---------

.push() -->  додає значення до масиву (в кінець)

.unshift()  -->  додає значення до масиву (на початку)

.pop()  -->  видаляє елементи з кінця масиву

.shift()  -->  видаляє елементи з початку масиву

.splice(1, 4);  // ['a', 'f']

.reverse() -->  всі елементи обертаються. Виводяться від останнього до першого

.sort()  -->  автоматичне сортування. 
               змінює початковий масив (не створює новий)


.fill()  

------------------------------------------------------

---------------- Створюють новий масив --------------

.map()

.filter()

.slice()

.flat()  --> з такого масиву [[1, 4, 6], [4, 7, 3], 1, 2, 3], робить такий [1, 4, 6, 4, 7, 3, 1, 2, 3]
              можна вказати глубину .flat(2)

.flatMap()  --> .map() + .flat() але не можна вибирати глубину вложенності масивів

.concat()  -->  обєднуює два масива в один
------------------------------------------------------


.padStart(14, '-')   -->  добавляє 14 раз знак - перед обєктом

.padEnd(14, '-')  -->  добавляє 14 раз знак - після об'єкта

.repeat(14) -->  повторяє 14 разів щось до чого ми це застосовуємо

.forEach()

.indexOf()

.find()

.includes(14)  -->  перевіряє чи в масиві є число 14



.join(', ')  -->  робить з масиву елементів строчку, де всі елементи з'єднані комою з пробілом

.map()

.filter()

.reduce()

.find() -->  шукає елемент

.findIndex()  -->  шукає індекс елемента

.includes(50)  -->  перевіряє чи є в масиві число 50

.some()  -->  хоча б один елемент з масиву має відповідати умові. В результаті або true або false

.every()  -->  всі елементи мають відповідати умові, тоді буде true, а якщо хочаб один елемент масиву не відповідає умові, то буде false





======== ФУНКЦИИ ===============
======== ФУНКЦИИ ===============
======== ФУНКЦИИ ===============

.call() - новий підхід

.apply()  - стфрий підхід

.bind()

.fill()  --> заповнити масив

        const arr1 = [1, 1, 1, 1, 1];
        arr1.fill(3, 2, 4);  
        в данному випадку масив arr1 заповнюється цифрами 3, починаючи з елементу і індексом 2, закінчуючи елементом з індексом 4.
        тобто якщо вивести в консоль буде:  [1, 1, 3, 3, 1]

Array.from() 
        Array.from({ length: 5 }, (item, index) => index + 1);  --> [1, 2, 3, 4, 5]

================================================================================================================================================
================================================================================================================================================
================================================================================================================================================

mmax26072005@gmail.com

Zależy mi na tej pracy, ponieważ jest blisko mojego miejsca zamieszkania, co pozwoli mi zaoszczędzić czas na dojazdach. Dzięki temu będę mógł skupić się w pełni na swoich obowiązkach. Bliskość pracy sprawi również, że będę bardziej dyspozycyjny i zaangażowany w realizację powierzonych zadań.